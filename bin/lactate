#!/usr/bin/env node

var optimist = require('optimist')

optimist.usage('Usage: $0 [options]');

var argv = optimist
  .options('from', {
    describe:'Public path',
    default:'',
    alias:'f'
  })
  .options('cache', {
    describe:'Store assets in-memory',
    default:true,
    alias:'c'
  })
  .options('watch_files', {
    describe:'Update memory cache on modification',
    default:true,
    alias:['watch-files', 'w']
  })
  .options('subdirs', {
    describe:'Serve subdirectories',
    default:true,
    alias:'s'
  })
  .options('max_age', {
    describe:'Client-side caching max-age',
    default:172800,
    alias:['max-age', 'm']
  })
  .options('gzip', {
    describe:'Gzip text assets',
    default:true,
    alias:'g'
  })
  .options('minify', {
    describe:'Minify text assets',
    default:false,
    alias:'m'
  })
  .options('bundle', {
    describe:'Bundle text assets',
    default:false,
    alias:'b'
  })
  .options('rebundle', {
    describe:'Rebundle assets if modified',
    default:true,
    alias:'r'
  })
  .options('headers', {
    describe:'Response headers JSON string',
    default:'{}',
    alias:'h'
  })
  .options('debug', {
    describe:'Log HTTP info',
    default:true,
    alias:'d'
  }).argv;

if (argv.help) return optimist.showHelp()

if (!!argv.headers) {
  argv.headers = JSON.parse(argv.headers);
};

var Lactate = require('lactate');
var dir = Lactate.dir(process.cwd(), argv);

var http = require('http');
var server = http.createServer(dir.toMiddleware());

var port = argv.port || 8080;
server.listen(port, console.log.bind(this, 'Listening on port', port));

console.log('Using options', dir.opts);
